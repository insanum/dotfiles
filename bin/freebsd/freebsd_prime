#!/bin/sh

#
# Prepare on FreeBSD:
#   /etc/ssh/sshd_config -> PermitRootLogin yes
#   /etc/rc.d/ssh restart
#   scp freebsd_prime <root>@<ip>:
#

if [ `id | sed -e "s/.*uid=\([0-9]*\).*/\1/"` -ne 0 ]; then
    echo "ERROR: Must run directly as root (no sudo)!"
    exit
fi

get_user_input()
{
    while true; do
        echo -n "${1}: " 1>&2
        read text
        if [ "$text" = "" ]; then
            echo "Invalid entry!" 1>&2
            continue
        fi
        echo $text
        return
    done
}

ifc=''
get_management_interface()
{
    if [ "$ifc" = "" ]; then
        echo "----"
        ifconfig -a
        echo "----"
        ifc=`get_user_input "Management interface"`
    fi
}

cat <<pkgEND
##############################
##          Ports           ##
##############################
pkgEND

# if bash exists then assume ports already updated and installed
if [ ! -x /usr/local/bin/bash ]; then
    portsnap fetch
    portsnap extract
    #portsnap update

    cd /usr/ports
    make fetchindex

    ports="shells/bash editors/vim-lite x11/xterm security/sudo net/samba36 devel/git devel/subversion devel/gmake converters/unix2dos"

    for p in $ports; do
        echo "Installing port '$p'..."
        cd /usr/ports/$p
        make BATCH=yes install clean
    done

    cd /bin
    ln -s /usr/local/bin/bash bash
fi

cat <<userEND
##############################
##          User            ##
##############################
userEND

# if home directory exists then assume user already configured
if [ ! -d /home/edavis ]; then
    echo "Adding user 'edavis'..."

    pw groupadd users -g 100
    pw useradd edavis -u 1000 -g users -s /usr/local/bin/bash -m
    pw groupmod users -m edavis
    pw usershow edavis
    pw groupshow users

    echo "Changing password for 'edavis'..."
    passwd edavis

    echo "Updating sudoers for 'edavis'..."
    cd /usr/local/etc
    grep edavis sudoers 2>&1 /dev/null
    if [ $? -ne 0 ]; then
        echo "" >> sudoers
        echo "edavis ALL=(ALL) ALL" >> sudoers
    fi
fi

cat <<netEND
##############################
##        Network           ##
##############################
netEND

echo "Configuring NSSWITCH..."
cd /etc
mv nsswitch.conf nsswitch.conf.orig
sed -e 's/^hosts: files dns/hosts: files wins dns/' nsswitch.conf.orig > nsswitch.conf
rm nsswitch.conf.orig

cat <<sambaEND
##############################
##         Samba            ##
##############################
sambaEND

# if smb.conf exists then assume Samba already configured
cd /usr/local/etc
if [ ! -f smb.conf.orig ]; then
    get_management_interface

    echo "Generating Samba config..."
    mv smb.conf smb.conf.orig
    cat > smb.conf <<smbEND
[global]
    interfaces = $ifc
    wins server = 10.5.2.1 10.5.2.2
smbEND

    echo "Enabling Samba..."
    cd /etc

    grep samba_enable rc.conf 2>&1 /dev/null
    if [ $? -ne 0 ]; then
        echo 'samba_enable="YES"' >> rc.conf
    fi

    grep nmbd_enable rc.conf 2>&1 /dev/null
    if [ $? -ne 0 ]; then
        echo 'nmbd_enable="YES"' >> rc.conf
    fi

    grep winbindd_enable rc.conf 2>&1 /dev/null
    if [ $? -ne 0 ]; then
        echo 'winbindd_enable="YES"' >> rc.conf
    fi

    /usr/local/etc/rc.d/samba restart
fi

cat <<nfsEND
##############################
##          NFS             ##
##############################
nfsEND

# if the work directory exists then assume NFS already configured
if [ ! -d /home/edavis/work ]; then
    echo "Configuring NFS mount points..."

    mkdir /home/edavis/work
    chown edavis:users /home/edavis/work

    grep eadmaka /etc/fstab 2>&1 /dev/null
    if [ $? -ne 0 ]; then
        echo "" >> /etc/fstab
        echo "eadmaka:/scratch/edavis/work /home/edavis/work nfs rw 0 0" >> /etc/fstab
    fi

    grep eadmaka /etc/hosts 2>&1 /dev/null
    if [ $? -ne 0 ]; then
        ip=`get_user_input "eadmaka IP address"`
        echo "" >> /etc/hosts
        echo "$ip eadmaka" >> /etc/hosts
    fi

    echo "Enabling NFS..."
    cd /etc

    grep nfs_client_enable rc.conf 2>&1 /dev/null
    if [ $? -ne 0 ]; then
        echo 'nfs_client_enable="YES"' >> rc.conf
    fi

    /etc/rc.d/nfsclient restart
fi

cat <<nfsEND
##############################
##       Environment        ##
##############################
nfsEND

github_nostalgic()
{
    cd /home/edavis
    mkdir src
    pushd src
    git clone https://github.com/insanum/nostalgic.git
    popd
    src/nostalgic/nostalgic clone https://github.com/insanum/dotfiles.git
    src/nostalgic/nostalgic symlink dotfiles
}

# if the nostalgic directory exists then assume github dotfiles already cloned
if [ ! -d /home/edavis/src/nostalgic ]; then
    echo "Installing nostalgic and dotfiles..."
    su edavis -c \
        'bash -c "cd /home/edavis;
                  mkdir src;
                  pushd src;
                  git clone https://github.com/insanum/nostalgic.git;
                  popd;
                  src/nostalgic/nostalgic clone https://github.com/insanum/dotfiles.git;
                  src/nostalgic/nostalgic symlink dotfiles;"'
fi

echo "Done!"

