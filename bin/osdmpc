#!/usr/bin/env python
# print the current played song by OSD
# depend on python-mpdclient2 and osd_cat (xosd_bin package)
# version 0.1 (public domain)

import sys, os, time, socket
import mpdclient2

Poll_delay = 15
Height = 200
Width = 60

#Font = '-adobe-helvetica-bold-r-normal-*-*-%i-*-*-p-*-iso10646-1' % Height
Font = '-*-terminus-bold-r-*-*-32-*-*-*-*-*-*-*'
Delay = 10
Color = 'green'
ShadowColor = 'white'
ShadowPos = 0
Outline = 1
OutlineColor = 'yellow'
Offset = 100

Options = "-A right -f %s -d %d -s 2 -c %s -S %s -s %d -O %d -u %s -o %d" % \
          (Font, Delay, Color, ShadowColor, ShadowPos, Outline, OutlineColor, Offset)

def error(s):
   print >> sys.stderr, s

def connect():
   global Poll_delay
   while 1:
       try:
           m = mpdclient2.connect()
           error("Connected.")
           try:
               test_loop(m, Poll_delay)
           except EOFError:
               error( "Connection to mpd lost, retrying...")
       except socket.error:
           error( "Connection to mpd impossible, retrying...")
       time.sleep(5)

def osd_print(s):
   global Options, Width
   # the osd library is broken on my system :p
   cmd = "echo %s | fold -s -w %i | osd_cat %s" % (repr(s), Width, Options)
   os.system(cmd)

def test_loop(m, delay):
   cur = ""
   while 1:
       try:
           t = m.currentsong().title
       except AttributeError:
           # no title, try with the name
           try:
               t = m.currentsong().name + " -- No title"
           except AttributeError:
               t = "No title"

       if cur != t:
           osd_print( t )
           cur = t
       time.sleep( delay )

connect()
