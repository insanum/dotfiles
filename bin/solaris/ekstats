#!/bin/bash

if [[ -z "$1" || -z "$2" || -z "$3" ]]; then
   echo "Usage: $0 <iface> <interval> <count>"
   exit
fi

IFACE=$1
DRVR=$(echo "$2" | sed 's/\([a-z]*\)\([0-9]*\)/\1/')
INST=$(echo "$2" | sed 's/\([a-z]*\)\([0-9]*\)/\2/')
INTERVAL=$2
COUNT=$3

function get_kstats()
{
    INIT=$1
    OIFS=$IFS
    IFS=$'\n'
    for k in $(eval $cmd); do
        set -- $(echo "$k" | nawk '{ print $1; print $2; }')
        stat=`echo $1 | cut -d: -f 4`
        if [[ $INIT -eq 1 ]]; then
            #declare "kstat_init_$stat=$2"
            export "kstat_init_$stat=$2"
            echo "$stat=$2"
        else
            val=$(eval "echo \$kstat_init_$stat")
            echo "$stat=$(($2 - $val))"
        fi
    done
    IFS=$OIFS
}

# Solaris 10 -> 'mac' group
# Solaris 11 -> 'phys' group

if [[ $OSTYPE == solaris2.10 ]]; then
    MACG=mac
else # [[ $OSTYPE == solaris2.11 ]]
    MACG=phys
fi

cmd="kstat -p \
     -m ${DRVR} \
     -i ${INST} \
     -n '/${PHYS}|l2stats/' \
     -s '/.*Broadcast.*|.*Multicast.*|.*Unicast.*|multi.*|brdcst.*|opackets.*|obytes.*|ipackets.*|rbytes.*/'"

echo "********************* (INITIAL KSTATS)"
get_kstats 1
echo "*********************"

trap "{ echo '--- BOOM! ---'; get_kstats; exit; }" SIGINT SIGTERM

for i in $(eval echo {1..$COUNT}); do
    sleep $INTERVAL
    echo "--------------------- ($(($i * $INTERVAL)) secs)"
    get_kstats 0
    echo "---------------------"
done

