#!/bin/bash

SUDO=sudo
if [ `id | sed "s/.*uid=\([0-9]*\).*/\1/"` -eq 0 ]; then SUDO=""; fi

DEVI=''
BGEP=''
REGS=''

REG=0
LEN=0

MAXLEN=32768 # 0x8000

function usage()
{
  echo "Usage: `basename $0` [-v] <inst> [addr] [length]"
  echo "       [addr]    default = 0x0"
  echo "       [length]  default = 0x7c00-<addr>"
  echo ""
  echo "Note - It apprears PCI config space starts at offset 0x2000"
  exit
}

VERBOSE=0
if [ -n "$1" ] && [ "$1" = "-v" ]; then
    VERBOSE=1
    shift
fi

if [ -z "$1" ]; then
    usage
fi

if [ -n "$2" ]; then
  REG=$2
  if [ -n "$3" ]; then
    LEN=$3
  else
    ((LEN = MAXLEN - REG))
  fi
else
  LEN=$MAXLEN
fi

# ghetto convert to decimal
((REG = REG + 0))
((LEN = LEN + 0))

if [ $VERBOSE -eq 1 ]; then
    printf "bnxe%d 0x%x,%d\n" $1 $REG $LEN
fi

# ensure sudo auth is primed
$SUDO bash -c 'echo "" > /dev/null'

DEVI=$($SUDO sh -c "echo \"::devbindings -q bnxe\" | mdb -k" | grep "#${1}" | nawk '{ print $1; }')
if [ $VERBOSE -eq 1 ]; then
    echo "0x$DEVI = dev_info"
fi

BGEP=$($SUDO sh -c "echo \"${DEVI}::print struct dev_info devi_driver_data\" | mdb -k" | nawk '{ print $3; }')
if [ $VERBOSE -eq 1 ]; then
    echo "$BGEP = um_device_t"
fi

REGS=$($SUDO sh -c "echo \"${BGEP}::print bnxe\\\`um_device_t lm_dev.vars.mapped_bar_addr[0]\" | mdb -k" | nawk '{ print $3; }') 
if [ $VERBOSE -eq 1 ]; then
    echo "$REGS = lm_dev.vars.mapped_bar_addr[0]"
fi

TMP=`mktemp`
$SUDO sh -c "echo \"${REGS}+0t${REG},0t${LEN}::dump -e\" | mdb -k /dev/ksyms /dev/allkmem" > $TMP
cat $TMP | nawk -v xfoo=${REG} 'BEGIN { foo=xfoo; FS = ":"; } { printf("%04x%s\n", foo, $2); foo += 16; }'
/bin/rm -f $TMP

