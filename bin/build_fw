#!/bin/bash

# <target> = thor_e | thor | creole_e | creole
# ./build_fw <repo_path> gitclean
# ./build_fw <repo_path> <target> clean
# ./build_fw <repo_path> <target> [ debug ] [ ARGS ]
# ./build_fw <repo_path> <target> [ debug ] [ coverity ]

set -x

USE_BSUB=0

export CMAKEVER=3.3.2
export CMAKE_VERSION=3.3.2
export JAVAVER=jdk1.8.0_92
export PATH=/projects/ccxsw_tools/coverity/8.5.0/Linux-64/bin:/tools/bin:$PATH
echo "CMAKEVER=$CMAKEVER"
echo "CMAKE_VERSION=$CMAKE_VERSION"
echo "JAVAVER=$JAVAVER"
echo "PATH=$PATH"

#export MGLS_LICENSE_FILE=/home/ls952535/Site_140637_121817.txt
#export MGC_PATH="/home/ls952535/mgc/embedded/toolchains/arm-none-eabi.2016.11/bin/:/home/ls952535/mgc/embedded/readystart-arm/nucleus/tools/bin/linux/x86/"
#export MGC_LIB=/home/ls952535/mgc/embedded/toolchains/arm-none-eabi.2016.11/lib/gcc/arm-none-eabi/6.2.0/

#export MGLS_LICENSE_FILE="17444@lic-sj1-345.broadcom.net"
#export MGC_PATH="/projects/ccxsw_tools/toolchains/mentor_graphics/mgc/arm-none-eabi.2016.11/bin/"
#export MGC_LIB="/projects/ccxsw_tools/toolchains/mentor_graphics/mgc/arm-none-eabi.2016.11/lib/gcc/arm-none-eabi/6.2.0/"

COVERITY_DIR=/projects/ccx-sw-arch/edavis/coverity
COVERITY_CFG=/projects/ccxsw_tools/contrib/coverity/config/2017.7/coverity.xml

function log()
{
    echo "--> ${1}"
}

function clean()
{
    if [[ -d "$1" ]]; then
        log "Cleaning ${1}..."
        /bin/rm -rf $1
    fi
}

REPO_DIR=$1
shift

if [[ "$1" = gitclean ]]; then
    cd $REPO_DIR
    log "git checkout -- ."
    git checkout -- .
    log "git clean -xdf"
    git clean -xdf
    log "git pull"
    git pull
    exit
fi

if [[ $1 = thor || $1 = thor_e ]]; then
    cd ${REPO_DIR}/main/Cumulus/firmware/THOR
elif [[ $1 = creole || $1 = creole_e ]]; then
    cd ${REPO_DIR}/main/Cumulus/firmware/CREOLE
else
    log "ERROR: Unknown target directory ($1)"
    exit
fi

BUILD_PKG=0
if [[ $1 != thor_e && $1 != creole_e ]]; then
    BUILD_PKG=1
fi

if [[ "$2" = clean ]]; then
    clean "${1^^}"
    clean "${1^^}_DEBUG"
    clean "obj/${1,,}"
    clean "obj/${1,,}_debug"
    exit
fi

if [[ ! -x ./bnxPkgUtil ]]; then
    cp -f ~/bnxPkgUtil .
    chmod 755 bnxPkgUtil
fi

BFILE="make_${1,,}.sh"
BFILE_PKG="make_${1,,}_pkg.sh"

if [[ ! -f "$BFILE" ]]; then
    log "ERROR: Unknown target script ($BFILE)"
    exit
fi

if [[ $BUILD_PKG -eq 1 && ! -f "$BFILE_PKG" ]]; then
    log "ERROR: Unknown target script ($BFILE_PKG)"
    exit
fi

shift

DEBUG=
if [[ "$1" = debug ]]; then
    shift
    DEBUG=debug
fi

COVERITY=
if [[ "$1" = coverity ]]; then
    shift
    COVERITY=coverity
fi

log "Building..."

if [[ -n "$COVERITY" ]]; then
    /bin/rm -rf $COVERITY_DIR/*
    cov-build --dir $COVERITY_DIR --config $COVERITY_CFG ./${BFILE} ${DEBUG}
    [[ $BUILD_PKG -eq 1 ]] && ./${BFILE_PKG} ${DEBUG}
    cov-analyze --dir $COVERITY_DIR --all --disable-parse-warnings
    cov-format-errors --config $COVERITY_CFG --dir $COVERITY_DIR -x --filesort --html-output ${COVERITY_DIR}/html
else
    if [[ $USE_BSUB -eq 1 ]]; then
        bsub -I -q irv-centos7 ./${BFILE} ${DEBUG} $*
        [[ $BUILD_PKG -eq 1 ]] && bsub -I -q irv-centos7 ./${BFILE_PKG} ${DEBUG} $*
    else
        ./${BFILE} ${DEBUG} $*
        [[ $BUILD_PKG -eq 1 ]] && ./${BFILE_PKG} ${DEBUG} $*
    fi
fi

