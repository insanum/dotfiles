#!/usr/bin/expect -f

set apc_host 10.13.252.136
set username apc
set password foobar

# FPGA->Host power outlet ports
set fpga16 3
set fpga17 19
set fpga18 20
set fpga19 10
set fpga20 6
set fpga21 4

proc usage {{error ""}} {
    global argv0
    if {$error != ""} {
        puts $error
    }
    puts "Usage: $argv0 <fpga#> \[ on | off | reset \] \[ force \]"
    exit
}

proc status {} {
    global apc_host
    global username
    global password

    log_user 0
    spawn telnet $apc_host

    expect "User Name : "
    send "$username\r"
    expect "Password  : "
    send "$password\r"

    # appcli
    expect "apc>"
    send "appcli\r"
    expect -re ".*(\n 1.*)APC> "

    puts $expect_out(1,string)

    close
}

if {[llength $argv] == 0} {
    puts "\nAPC: $apc_host"

    status

    puts " FPGA #16: $fpga16"
    puts " FPGA #17: $fpga17"
    puts " FPGA #18: $fpga18"
    puts " FPGA #19: $fpga19"
    puts " FPGA #20: $fpga20"
    puts " FPGA #21: $fpga21"
    puts ""

    usage
}

if {[llength $argv] < 2} {
    usage "ERROR: Invalid command line args"
}

if {[lindex $argv 0] == 16} {
    set host $fpga16
} elseif {[lindex $argv 0] == 17} {
    set host $fpga17
} elseif {[lindex $argv 0] == 18} {
    set host $fpga18
} elseif {[lindex $argv 0] == 19} {
    set host $fpga19
} elseif {[lindex $argv 0] == 20} {
    set host $fpga20
} elseif {[lindex $argv 0] == 21} {
    set host $fpga21
} else {
    usage "ERROR: Invalid fpga #"
}

if {[lindex $argv 1] == "on"} {
    set power 1
} elseif {[lindex $argv 1] == "off"} {
    set power 2
} elseif {[lindex $argv 1] == "reset"} {
    set power 3
} else {
    usage "ERROR: Invalid power argument"
}

set i_am_brave False
if {[lindex $argv 2] == "force"} {
    set i_am_brave True
}

spawn telnet $apc_host

expect "User Name : "
send "apc\r"
expect "Password  : "
send "apc\r"

# appcli
expect "apc>"
send "appcli\r"
expect "APC> "

if ($i_am_brave) {
    if {$power == 1} {
        send "on $host\r"
    } elseif {$power == 2} {
        send "off $host\r"
    } elseif {$power == 3} {
        send "reboot $host\r"
    }
} else {
    send "\r"
}

expect "APC> "
send \x1b
expect "APC> "

sleep 1
close

