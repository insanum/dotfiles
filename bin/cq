#!/bin/bash

if [[ -z "$1" ]]; then
    echo "ERROR: Must specify language [ cscope | c | js | go | rb | py ]"
    exit 1
fi

GIT_DIR=`basename $(git rev-parse --show-toplevel 2> /dev/null)`
GIT_BRANCH=`git rev-parse --abbrev-ref HEAD 2> /dev/null`

DB_DIR=${HOME}/codequery/${HOSTNAME}/${GIT_DIR}/${GIT_BRANCH}
mkdir -p $DB_DIR

CQ_DB=${DB_DIR}/codequery.db
CS_FILES=${DB_DIR}/cscope.files
CS_OUT=${DB_DIR}/cscope.out
TAGS=${DB_DIR}/tags

# Find files from the current directory under a Git repo...

if [[ $1 == cscope ]]; then

    find $PWD -iname "*.c"    > $CS_FILES
    find $PWD -iname "*.cpp" >> $CS_FILES
    find $PWD -iname "*.cxx" >> $CS_FILES
    find $PWD -iname "*.cc"  >> $CS_FILES
    find $PWD -iname "*.cu"  >> $CS_FILES
    find $PWD -iname "*.h"   >> $CS_FILES
    find $PWD -iname "*.hpp" >> $CS_FILES
    find $PWD -iname "*.hxx" >> $CS_FILES
    find $PWD -iname "*.hh " >> $CS_FILES

    # XXX modify this to an "exclude" list passed on the command line
    grep -v "firmware/RTOS" $CS_FILES > ${CS_FILES}.new
    mv -f ${CS_FILES}.new $CS_FILES

    # [-k] kernel mode, do not include the default include directory (/usr/include)
    # [-f] output filename (default: cscope.out)
    # [-i] input filename containing list of files (default: cscope.files)
    cscope -k -b -i $CS_FILES -f $CS_OUT

elif [[ $1 == c ]]; then

    find $PWD -iname "*.c"    > $CS_FILES
    find $PWD -iname "*.cpp" >> $CS_FILES
    find $PWD -iname "*.cxx" >> $CS_FILES
    find $PWD -iname "*.cc"  >> $CS_FILES
    find $PWD -iname "*.cu"  >> $CS_FILES
    find $PWD -iname "*.h"   >> $CS_FILES
    find $PWD -iname "*.hpp" >> $CS_FILES
    find $PWD -iname "*.hxx" >> $CS_FILES
    find $PWD -iname "*.hh " >> $CS_FILES

    # XXX modify this to an "exclude" list passed on the command line
    grep -v "firmware/RTOS" $CS_FILES > ${CS_FILES}.new
    mv -f ${CS_FILES}.new $CS_FILES

    # [-q] enable fast symbol lookup (creates two more files and good for large projects)
    # [-k] kernel mode, do not include the default include directory (/usr/include)
    # [-c] only use ASCII data in the output and don't compress the data
    # [-f] output filename (default: cscope.out)
    # [-i] input filename containing list of files (default: cscope.files)
    cscope -c -b -i $CS_FILES -f $CS_OUT

elif  [[ $1 == js ]]; then

    find $PWD -iname "*.js" > $CS_FILES
    starscope -e cscope

elif  [[ $1 == go ]]; then

    find $PWD -iname "*.go" > $CS_FILES
    starscope -e cscope

elif  [[ $1 == rb ]]; then

    find $PWD -iname "*.rb" > $CS_FILES
    starscope -e cscope

elif  [[ $1 == py ]]; then

    find $PWD -iname "*.py" > $CS_FILES
    pycscope -i $CS_FILES

else

    echo "ERROR: Unknown language '$1'"
    exit 1

fi

if [[ $1 != cscope ]]; then
    ctags --fields=+i -n -R -L $CS_FILES -f $TAGS
    cqmakedb -d -s $CQ_DB -c $CS_OUT -t $TAGS -p
fi

