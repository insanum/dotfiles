#!/bin/bash

SUDO=sudo
if [ `id | sed "s/.*uid=\([0-9]*\).*/\1/"` -eq 0 ]; then SUDO=""; fi

function usage()
{
    echo "Usage: mnc_test <iface> <n> [ping]"
    echo "  <iface>  network interface to work on"
    echo "  <n>      number of mcast addresses"
    echo "  ping     ping all mcast addresses (used from client)"
    echo ""
    exit 1
}

if [ -z "$1" ]; then usage; fi
IFACE=$1
shift
if [ -z "$1" ]; then usage; fi
CNT=$1
shift
PING=0
if [ "$1" = ping ]; then PING=1; fi

# ensure sudo auth is primed
$SUDO bash -c 'echo "" > /dev/null'

# get the ip address of IFACE
ifconfig $IFACE &> /dev/null
if [ $? -ne 0 ]; then
    echo "Invalid interface: $IFACE"
    exit 1
fi
LIP=`ifconfig $IFACE | grep inet | awk '{ print $2; }'`

function client_side()
{
    net=0
    for ((i = 1; i <= $CNT; i++)); do
        ((host = i % 256))
        if [ $host -eq 0 ]; then
            ((net++))
            continue
        fi
        if [[ $OSTYPE =~ solaris ]]; then
            ping -i $IFACE 225.0.${net}.${host} 2
        elif [[ $OSTYPE =~ freebsd ]]; then
            ping -L -I $LIP -c 2 225.0.${net}.${host}
        else # Linux
            ping -I $IFACE -c 2 225.0.${net}.${host}
        fi
    done
}

function server_side()
{
    if [[ $OSTYPE =~ freebsd ]]; then
        $SUDO sysctl net.inet.icmp.bmcastecho=1
    elif [[ $OSTYPE =~ linux ]]; then
        $SUDO bash -c 'echo "0" > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts'
    fi

    # note that "01:00:5e:00:00:01" is already registered when plumbed
    pids=""
    net=0
    for ((i = 1; i <= $CNT; i++)); do
        ((host = i % 256))
        if [ $host -eq 0 ]; then
            ((net++))
            continue
        fi
        mnc -l -i $IFACE -p $((2000 + $i)) 225.0.${net}.${host} &
        pids="$pids $!"
    done

    echo "Number of mnc servers started: $CNT"
    echo "PIDs:$pids"

    echo -n "Press [Enter] to stop:"
    read text

    for p in $pids; do
        kill $p
    done

    if [[ $OSTYPE =~ freebsd ]]; then
        $SUDO sysctl net.inet.icmp.bmcastecho=0
    elif [[ $OSTYPE =~ linux ]]; then
        $SUDO bash -c 'echo "1" > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts'
    fi
}

if [ $PING -ne 0 ]; then
    client_side
else
    server_side
fi

