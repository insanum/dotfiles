#!/bin/bash

PANEL_FIFO=/tmp/vnc-panel-fifo
PANEL_HEIGHT=24
#PANEL_WIDTH=1920
PANEL_FONT_FAMILY="-*-terminus-*-r-normal-*-18-*-*-*-c-*-*-1"

COLOR_FOREGROUND=white
COLOR_BACKGROUND=black

COLOR_ACTIVE_MONITOR_FG=green
COLOR_ACTIVE_MONITOR_BG=black

COLOR_INACTIVE_MONITOR_FG=red
COLOR_INACTIVE_MONITOR_BG=black

COLOR_FOCUSED_OCCUPIED_FG='#FF00FF00'
#COLOR_FOCUSED_OCCUPIED_BG='#FF585858'
COLOR_FOCUSED_OCCUPIED_BG=black

COLOR_FOCUSED_FREE_FG='#FF00FF00'
#COLOR_FOCUSED_FREE_BG='#FF585858'
COLOR_FOCUSED_FREE_BG=black

COLOR_OCCUPIED_FG=white
COLOR_OCCUPIED_BG=black

COLOR_FREE_FG='#FF585858'
COLOR_FREE_BG=black

COLOR_FOCUSED_URGENT_FG=black
COLOR_FOCUSED_URGENT_BG='#FFFF0000'

COLOR_URGENT_FG=black
COLOR_URGENT_BG='#FFFF0000'

COLOR_LAYOUT_FG=cyan
COLOR_LAYOUT_BG=black

COLOR_TITLE_FG=white
COLOR_TITLE_BG=black

COLOR_STATUS_FG=white
COLOR_STATUS_BG=black

sep="%{F#FF005FAF}--%{F-}"
obrack="%{F#FF585858}[%{F-}"
cbrack="%{F#FF585858}]%{F-}"


if [[ $(pgrep -cx vnc_bspwm_panel) -gt 1 ]]; then
	printf "The panel is already running.\n" >&2
	exit 1
fi

function handle_signal()
{
    bspc config -m ^1 top_padding 0
    rm -f "$PANEL_FIFO"
    trap - TERM
    kill 0
}
trap 'handle_signal' INT TERM QUIT EXIT

[[ -e "$PANEL_FIFO" ]] && rm -f "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc config -m ^1 top_padding $PANEL_HEIGHT

function clock()
{
    while true; do
        date +'S%a %m/%d %H:%M'
        sleep 1
    done
}

bspc control --subscribe  > "$PANEL_FIFO" &
xtitle -sf 'T%s'          > "$PANEL_FIFO" &
clock                     > "$PANEL_FIFO" &

function panel_bar()
{
    sleep 1 # Let the FIFO queue up...
    while read -r line; do
        case $line in
        S*)
            # clock output
            fg=$COLOR_STATUS_FG
            bg=$COLOR_STATUS_BG
            sys_infos="%{F$fg}%{B$bg}${obrack}${line#?}${cbrack}%{B-}%{F-}"
            ;;
        T*)
            # xtitle output
            fg=$COLOR_TITLE_FG
            bg=$COLOR_TITLE_BG
            title="%{F$fg}%{B$bg}${line#?}%{B-}%{F-}"
            ;;
        W*)
            # bspwm internal state
            wm_infos=""
            IFS=':'
            set -- ${line#?}
            while [[ $# -gt 0 ]]; do
                cmd=''
                item=$1
                name=${item#?}
                case $item in
                M*)
                    # focused monitor
                    fg=$COLOR_ACTIVE_MONITOR_FG
                    bg=$COLOR_ACTIVE_MONITOR_BG
                    name="[${name}]"
                    ;;
                m*)
                    # unfocused monitor
                    fg=$COLOR_INACTIVE_MONITOR_FG
                    bg=$COLOR_INACTIVE_MONITOR_BG
                    name="[${name}]"
                    ;;
                O*)
                    # occupied focused desktop
                    fg=$COLOR_FOCUSED_OCCUPIED_FG
                    bg=$COLOR_FOCUSED_OCCUPIED_BG
                    cmd="bspc desktop -f ${name}"
                    ;;
                o*)
                    # occupied unfocused desktop
                    fg=$COLOR_OCCUPIED_FG
                    bg=$COLOR_OCCUPIED_BG
                    cmd="bspc desktop -f ${name}"
                    ;;
                F*)
                    # free focused desktop
                    fg=$COLOR_FOCUSED_FREE_FG
                    bg=$COLOR_FOCUSED_FREE_BG
                    cmd="bspc desktop -f ${name}"
                    ;;
                f*)
                    # free unfocused desktop
                    fg=$COLOR_FREE_FG
                    bg=$COLOR_FREE_BG
                    cmd="bspc desktop -f ${name}"
                    ;;
                U*)
                    # urgent focused desktop
                    fg=$COLOR_FOCUSED_URGENT_FG
                    bg=$COLOR_FOCUSED_URGENT_BG
                    cmd="bspc desktop -f ${name}"
                    ;;
                u*)
                    # urgent unfocused desktop
                    fg=$COLOR_URGENT_FG
                    bg=$COLOR_URGENT_BG
                    cmd="bspc desktop -f ${name}"
                    ;;
                L*)
                    # layout of focused desktop
                    fg=$COLOR_LAYOUT_FG
                    bg=$COLOR_LAYOUT_BG
                    ;;
                *)
                    shift
                    continue
                    ;;
                esac
                if [[ -n "$cmd" ]]; then
                    wm_infos+="%{F$fg}%{B$bg}%{A:$cmd:}${name} %{A}%{B-}%{F-}"
                else
                    wm_infos+="%{F$fg}%{B$bg}${name} %{B-}%{F-}"
                fi
                shift
            done
            ;;
        esac
        printf "%s\n" "%{S0}%{l}${sys_infos} ${wm_infos}${sep} ${title}"
    done
}

cat "$PANEL_FIFO" | \
    panel_bar     | \
    bar-aint-recursive -g x${PANEL_HEIGHT}       \
                       -f "$PANEL_FONT_FAMILY"   \
                       -F "$COLOR_FOREGROUND"    \
                       -B "$COLOR_BACKGROUND"  | \
    while read line; do eval "$line"; done &

wait

