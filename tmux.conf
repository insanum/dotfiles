
unbind C-b
set-option -g prefix C-a
bind-key a     send-prefix
bind-key C-a   last-window

if-shell '[[ -n "${SSH_CONNECTION}" ]]' \
    'unbind C-a ; \
     unbind a ; \
     set-option -g prefix C-q ; \
     bind-key q send-prefix ; \
     bind-key C-q last-window'

bind-key Space next-window

bind-key C-l refresh-client
#bind-key l  refresh-client

bind-key s split-window -v
bind-key v split-window -h

bind-key j select-pane -D
bind-key k select-pane -U
bind-key h select-pane -L
bind-key l select-pane -R

bind-key -r S-Left  resize-pane -L 1
bind-key -r S-Right resize-pane -R 1
bind-key -r S-Up    resize-pane -U 1
bind-key -r S-Down  resize-pane -D 1
bind-key -r M-Left  resize-pane -L 5
bind-key -r M-Right resize-pane -R 5
bind-key -r M-Up    resize-pane -U 5
bind-key -r M-Down  resize-pane -D 5
# min width for vim: >= 82 width + gutter (4 linenr + 2 marks)
bind-key    C-t     resize-pane -x 90
bind-key    O       next-layout

bind-key : command-prompt

bind-key C-j copy-mode
bind-key .   paste-buffer
bind-key ,   choose-buffer

bind-key K confirm-before kill-server

set-window-option -g mode-keys        vi
set-window-option -g alternate-screen off
set-window-option -g allow-rename     off

set-option -g base-index        1
set-option -g history-limit     5000
set-option -g escape-time       10
set-option -g bell-action       any
#set-option -g visual-bell       on
set-option -g set-titles        on
set-option -g set-titles-string "#h - tmux #S #I.#W"

bind-key C-F1  move-window -t 1
bind-key C-F2  move-window -t 2
bind-key C-F3  move-window -t 3
bind-key C-F4  move-window -t 4
bind-key C-F5  move-window -t 5
bind-key C-F6  move-window -t 6
bind-key C-F7  move-window -t 7
bind-key C-F8  move-window -t 8
bind-key C-F9  move-window -t 9
bind-key C-F10 move-window -t 0
bind-key !     attach-session -t work1
bind-key @     attach-session -t work2
bind-key W     command-prompt -p "New Window Name:" "rename-window %%"
bind-key C-z   pipe-pane -o 'cat >> $HOME/tmux-`date "+%Y.%m.%d.%H.%M.%S"`.log'
bind-key C-h   new-window -n "htop" "htop"
#bind-key l     new-window -n "calc" "calc"
bind-key b     new-window -n "bitter" "$HOME/src/bitter/bitter -i"
#bind-key o     new-window -n "votl" -t 0 -c "$HOME" "vim $HOME/unison/insanum.votl"
#bind-key C-j   new-window -n "alot" -t 0 -c "$HOME" "alot -c $HOME/.alotrc"
#bind-key C-m   new-window -n "mutt" -t 0 -c "$HOME" "$HOME/src/mutt-kz/mutt"
#bind-key C-m   new-window -n "mutt" -t 0 -c "$HOME" "mutt"
#bind-key M     new-window -n "ncmpcpp" "ncmpcpp"
#bind-key C-n   new-window -n "notes" -t 9 -c "$HOME/notes"
bind-key C-n   new-window -n "skylark" -t work1:0 -c "$HOME" "ssh edavis@skylark" \; select-pane -t work1:0.0 -P "bg=colour235"
bind-key C-m   new-window -n "insanum" -t work1:8 -c "$HOME" "ssh insanum.com" \; select-pane -t work1:8.0 -P "bg=colour235"
bind-key C-f   new-window -n "notifications" -c "$HOME" "tmux_status ALL | less"
bind-key F     run-shell -b "tmux_status MARK"
bind-key x     new-window -n "matrix" "cmatrix -b -f -s -u 5 -C green"

# move tmux copy buffer into x clipboard
#bind-key -T copy-mode-vi C-c copy-pipe "xclip"
if-shell '[[ ${OSTYPE} =~ darwin ]]' \
    'bind-key -T copy-mode-vi C-c send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" ; \
     bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"'
# move x clipboard into tmux paste buffer
bind-key C-v run "tmux set-buffer -b from_xclip \"$(xclip -o)\"; tmux paste-buffer -b from_xclip"

bind-key T     send-keys "export TERM=screen-256color" "Enter"
#bind-key T     send-keys "export TERM=xterm; eval `resize`; bashrc" "Enter"
#bind-key C-i   command-prompt -p "iproc?" "run-shell \"tmux_iproc %%\""

bind-key B     send-keys "reset bono" Enter "reg write 0x3b00008 0x28402" Enter "reg write 0x3b00000 0x5" Enter "cpu -cpu bono -fastboot_only" Enter Enter

set-option -g display-panes-time 3000
set-option -g display-time       3000

# for macOS (homebrew+tmux)
if-shell '[[ ${OSTYPE} =~ darwin ]]' \
    'set -g default-command "reattach-to-user-namespace -l ${SHELL}"'

#set-option -g default-shell "/usr/bin/fish"

#set-option -g default-terminal "screen-256color"
set-option -g default-terminal "tmux-256color"

if-shell '[[ ${HOSTNAME} == EDAVIS-WIN10 ]]' \
    'set-option -g default-terminal "xterm-256color"'

set-option -g set-clipboard on

set -g mouse on
unbind-key -T root MouseDrag1Border
unbind-key -T root MouseDown1Status
#unbind-key -T root MouseDown3Pane
unbind-key -T root WheelUpStatus
unbind-key -T root WheelDownStatus
unbind-key -T copy-mode MouseDown1Pane
unbind-key -T copy-mode MouseDrag1Pane
unbind-key -T copy-mode MouseDragEnd1Pane
unbind-key -T copy-mode WheelUpPane
unbind-key -T copy-mode WheelDownPane
unbind-key -T copy-mode DoubleClick1Pane
unbind-key -T copy-mode TripleClick1Pane
# double/triple click also selects when not in copy-mode
bind-key -T root DoubleClick1Pane select-pane -t= \; copy-mode \; send-keys -X select-word
bind-key -T root TripleClick1Pane select-pane -t= \; copy-mode \; send-keys -X select-line
#bind-key -T copy-mode-vi MouseDown1Pane    select-pane
#bind-key -T copy-mode-vi MouseDrag1Pane    select-pane \; send-keys -X begin-selection
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection-and-cancel
#bind-key -T copy-mode-vi WheelUpPane       select-pane \; send-keys -X -N 5 scroll-up
#bind-key -T copy-mode-vi WheelDownPane     select-pane \; send-keys -X -N 5 scroll-down
#bind-key -T copy-mode-vi DoubleClick1Pane  select-pane \; send-keys -X select-word
#bind-key -T copy-mode-vi TripleClick1Pane  select-pane \; send-keys -X select-line
#bind-key -T root         MouseDown1Pane    select-pane -t= \; send-keys -M
#bind-key -T root         MouseDown3Pane    if-shell -Ft= "#{mouse_any_flag}" "select-pane -t= ; send-keys -M" "select-pane -mt="
#bind-key -T root         MouseDrag1Pane    if-shell -Ft= "#{mouse_any_flag}" "if -Ft= \"#{pane_in_mode}\" \"copy-mode -M\" \"send-keys -M\"" "copy-mode -M"
#bind-key -T root         WheelUpPane       if-shell -Ft= "#{mouse_any_flag}" "send-keys -M" "if -Ft= \"#{pane_in_mode}\" \"send-keys -M\" \"copy-mode -et=\""

# STATUS BAR AND COLORS -------------------------------- {{{

set-option -g pane-border-style        "fg=colour246,bg=default"
set-option -g pane-active-border-style "fg=colour214,bg=default"

#set-option -g window-style        "fg=default,bg=colour234"
#set-option -g window-active-style "fg=default,bg=colour233"
#set-option -g window-active-style "fg=default,bg=colour236"

set-option -g message-style "fg=colour129,bg=colour233"

set-window-option -g mode-style "fg=colour233,bg=colour207"

#set-option -g status-interval 60
#set-option -g status-style "fg=red,bg=default,bright"
#
#set-option -g status-justify right
#
##set-option -g status-left ".: [ #[fg=yellow,bright]#S#[default] #[fg=blue,bright]#H#[default] - #[fg=blue,bright]#(if [[ -d ~/Maildir/INBOX/new ]]; then ls ~/Maildir/INBOX/new | wc -l; else echo 'n/a'; fi)#[default] ]"
#set-option -g status-left ".: [ #[fg=yellow,bright]#S#[default] #[fg=blue,bright]#H#[default] ]"
#set-option -g status-left-length 50
#
#set-option -g status-right ":."
##set-option -g status-right "[ #[fg=magenta]#(cat /proc/loadavg | cut -d \" \" -f 1,2,3)#[default] ][ #[fg=cyan,bright]%a %m/%d %H:%M #[default]] ::"
##set-option -g status-right-length 50
#
#set-window-option -g window-status-style         "fg=black,bg=default,bright"
#set-window-option -g window-status-current-style "fg=black,bg=default,bright"
#
#set-window-option -g window-status-format         "<#[fg=cyan,nobright]#I:#W#[default]#[fg=yellow,bright]#F#[default]>"
#set-window-option -g window-status-current-format "<#[fg=red,bright]#I:#W#[default]#[fg=yellow,bright]#F#[default]>"

set-option -g status-interval 2
set-option -g status-style "fg=colour255,bg=default"

set-option -g status-justify right
set-option -g status-left "#[fg=colour255,bg=colour54,bright]#(tmux_status LAST)#[default]"
set-option -g status-left-length 100
set-option -g status-right "#[bg=colour54,bright]  #[fg=colour34]#h #[fg=colour46]#S:#I:#P  #[default]"
set-option -g status-right-length 40

set-window-option -g window-status-style         "fg=colour244,bg=default"
set-window-option -g window-status-current-style "fg=colour207,bg=default"

set-window-option -g window-status-format         "<#[fg=colour245]#I:#W#[default]#[fg=colour51]#F#[default]>"
set-window-option -g window-status-current-format "<#[fg=colour207]#I:#W#[default]#[fg=colour51]#F#[default]>"

# STATUS BAR AND COLORS (END) -------------------------- }}}

# SESSION CONFIG --------------------------------------- {{{

new-session  -d       -s work1
split-window -d -h -b -t work1:1.0
split-window -d -v -b -t work1:1.0 -l 20
new-window   -d       -t work1:2
new-window   -d       -t work1:3

#new-window   -d    -n "lab1" -t work1:8   "telnet ${LTRX_IP} 10002" # amd
#split-window -d -h           -t work1:8.0 "telnet ${LTRX_IP} 10003" # intel
#new-window   -d    -n "lab2" -t work1:9   "ssh root@${SPARC_IP}"    # sparc
#split-window -d -h           -t work1:9.0 "telnet ${LTRX_IP} 10001" # sunny

#new-window   -d -t work1:0 -n "mutt"  "mutt"
#new-window   -d -t work1:9 -n "finch" "DISPLAY=:0.0 finch"

# Notes Window (#9)
if-shell '[[ ${HOSTNAME} == edavis-mbp ]]' \
    'new-window   -d       -t work1:9   -c "$HOME/notes" -n "notes" ; \
     split-window -d -h -b -t work1:9.0'
     #split-window -d -v -b -t work1:9.0 -l 10

# Second session I never use... :-P
#new-session  -d -s work2
#new-window   -d -t work2:2

#attach-session -t work1

# SESSION CONFIG (END) --------------------------------- }}}

# vim:foldmethod=marker
